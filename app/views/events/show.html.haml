= render 'shared/header'
.event_info
  .event_info__upper
    .event_icon
      - if @event.date < DateTime.now
        %p.event_end_message
          %i.fas.fa-exclamation-triangle このイベントは終了しました
        = image_tag @event.image.url, class: "event_icon__content"
      -else
        = image_tag @event.image.url, class: "event_icon__content"

    .event_info__text_box
      .event_info__text_box--name
        = @event.name
      .event_info__table
        %table
          %tbody
            %tr
              %th 日にち
              %td
                = @event.date.strftime("%Y年%m月%d日")
            %tr
              %th 時間
              %td
                = "#{@event.open_time}".slice(11..15)
                〜
                = "#{@event.end_time}".slice(11..15)
            %tr
              %th 場所
              %td
                = @event.place
            %tr
              %th 詳細
              %td
                = simple_format(@event.description)
            %tr
              %th 主催者
              %td
                - if @owner == nil
                  %i.fas.fa-exclamation-triangle 削除済みのユーザーです
                - else
                  = link_to @owner.name, user_path(@owner.id), class: "owner_link"

    - if user_signed_in? && current_user.id == @event.owner
      = link_to "イベントを編集する", edit_event_path(@event.id), class: "admin_btn"
      = link_to "イベントを削除する", event_path(@event.id), data:{ confirm: "イベントを削除すると、ユーザーの参加情報なども含め情報の復元ができません。本当に削除しますか？", cancel: '削除しない', commit: '削除する'}, method: :delete, class: "admin_btn"
    - else
      -if user_signed_in? && @event_user.nil?
        = link_to "イベントに参加する", join_event_path(@event.id), method: :post, class: 'join_btn'
      - elsif user_signed_in?
        = link_to "参加をやめる", unjoin_event_path(@event.id), method: :delete, class: "done_btn"
      - else
        = link_to "イベントに参加にはログインが必要です", user_session_path, class: "join_btn"
  .event_info__middle

  .user_info__lower
    %ul.user_tabs
      %li.user_tabs__item.active 参加予定のメンバー
      %li.user_tabs__item コメント

    .user_cards_box.show
      - @users.each do |user|
        = link_to user_path(user.id), class: "user_link" do
          .user_card
            .user_card__icon
              - if user.email == "guest@example.com"
                = image_tag "user_test_login.jpg", class: "user_card__icon--content"
              - else
                - if user.image.present?
                  = image_tag user.image.url, class: "user_card__icon--content"
                -else
                  = image_tag "user_test_login.jpg", class: "user_card__icon--content"
            .user_card__name
              = user.name.truncate(8)
            .user_card__request
              - if user_signed_in?
                - if user.id == current_user.id
                  = link_to "あなたです", user_path(user.id), class: "user_card__request--done_btn"
                -# - else
                -#   = link_to "フォロー", "#", class: "user_card__request--btn"

    .user_cards_box
      - if current_user
        .comment_form
          = form_with(model: [@event, @comment], local: true, id: "new_comment") do |f|
            = f.text_area :text, placeholder: "コメントする", rows: "2", class: "textbox"
            = f.submit "投稿する", class: "comment_form__submit"
      - else
        %i.fas.fa-exclamation-triangle コメントの投稿にはログインが必要です
      - if @comments
        .comments
          - @comments.each do |comment|
            .comment_form__content
              .comment_left
                = link_to user_path(comment.user.id), class: "comment_links" do
                  - if comment.user.email == "guest@example.com"
                    = image_tag "user_test_login.jpg", class: "comment_form__content--img"
                  - else
                    = image_tag comment.user.image.url, class: "comment_form__content--img"
              .comment_right
                %strong
                  = link_to comment.user.name, user_path(comment.user_id), class: "comment_form__content--name"
                %p.comment_form__content--text
                  = comment.text
              .comment_delete
                .comment_time
                  = time_ago_in_words(comment.created_at).upcase
                - if current_user == comment.user
                  = link_to "削除", event_comment_path(comment.event.id, comment.id), method: :delete, class: "comment_delete__link"
      
        
= render 'shared/footer'